generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String    @db.VarChar(100)
  lastName     String    @db.VarChar(100)
  email        String    @unique @db.VarChar(255)
  passwordHash String
  createdAt    DateTime  @default(now())
  files        File[]
  folders      Folder[]

  @@map("users")
}

model File {
  id         Int       @id @default(autoincrement())
  ownerId    Int
  folderId   Int?
  fileName   String    @db.VarChar(255)
  fileSize   BigInt
  mimeType   String?
  url        String?   @db.VarChar(500)
  uploadedAt DateTime  @default(now())
  folder     Folder?   @relation(fields: [folderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  owner      User      @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("files")
}

model Folder {
  id        Int       @id @default(autoincrement())
  ownerId   Int
  parentId  Int?
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  files     File[]
  owner     User      @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parent    Folder?   @relation("FolderToFolder", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Folder[]  @relation("FolderToFolder")

  @@map("folders")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}


// I HAD THIS BEFORE. IT DIDN'T WORK BECAUSE SESSION expects the schema to look a certain way (with an id column, sid, data, and expiresAt).
// model Session {
//   sid       String   @id
//   data      String
//   expiresAt DateTime
// }
